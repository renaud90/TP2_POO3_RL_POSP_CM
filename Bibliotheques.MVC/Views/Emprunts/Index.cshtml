@model IEnumerable<Bibliotheques.ApplicationCore.Entites.Emprunt>
@using Bibliotheques.MVC.Extensions

@{
    ViewData["Title"] = "Index";
}

<h1>Liste des emprunts</h1>

<p>
    <a asp-action="Create">Créer un nouvel emprunt</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Recherchez par livre ou abonné: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Rechercher" class="btn btn-default" /> |
            <a asp-action="Index">Retour vers la liste complète</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Usager.Prenom)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NomAbonneSortParam"]">@Html.DisplayNameFor(model => model.Usager.Nom)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitreLivreSortParam"]">@Html.DisplayNameFor(model => model.Livre.Titre)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateEmpruntSortParam"]"> @Html.DisplayNameFor(model => model.DateEmprunt)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateRetourSortParam"]">@Html.DisplayNameFor(model => model.DateRetour)</a>
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Usager.Prenom)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Usager.Nom)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Livre.Titre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateEmprunt)
                </td>
                @{
                    var dateLimiteEmprunt = item.ObtenirDateLimite((int)ViewBag.JoursLocation);
                    var empruntRetourneEnRetard = item.DateRetour > dateLimiteEmprunt.Date;
                    var empruntNonRetourne = item.DateRetour == DateTime.MinValue;

                    if (empruntNonRetourne && DateTime.Today > dateLimiteEmprunt)
                    {
                        <td class="font-italic en-retard">
                            @Html.DisplayFor(modelItem => item.DateRetour) <img class="iconStatutEmprunt" src="/images/Icon_ExclamationMark.png" alt="" />
                        </td>

                    }
                    else if (empruntNonRetourne)
                    {
                        <td class="en-attente">
                            @Html.DisplayFor(modelItem => item.DateRetour) <img class="iconStatutEmprunt" src="/images/Icon_Pending.png" alt="" />
                        </td>

                    }
                    else if (empruntRetourneEnRetard)
                    {
                        <td class="en-retard">
                            @Html.DisplayFor(modelItem => item.DateRetour) <img class="iconStatutEmprunt" src="/images/Icon_ExclamationMark.png" alt="" />
                        </td>
                    }
                    else
                    {
                        <td id="retourne">
                            @Html.DisplayFor(modelItem => item.DateRetour) <img class="iconStatutEmprunt" src="/images/Icon_Checkmark.png" alt="" />
                        </td>
                    }
                }
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Modifier</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Détails</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Supprimer</a>
                </td>
            </tr>
        }
    </tbody>
</table>
